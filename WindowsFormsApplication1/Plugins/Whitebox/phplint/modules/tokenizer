<?
/*.
	DOC  Tokenizer Functions

	NOTE. Since PHP 4.3.0, the tokenizer module is effectively
	built-in by default and can be disabled explicitly with
	./configure --disable-tokenizer when compiling from the source.
	<p>

	See: <a href="http://www.php.net/manual/en/ref.tokenizer.php"><code>http://www.php.net/manual/en/ref.tokenizer.php</code></a>

.*/

# FIXME: all dummy values

/*. if_php_ver_4 .*/
	define('T_ML_COMMENT', 1);
	define('T_OLD_FUNCTION', 1);
/*. else .*/
	define('T_ABSTRACT', 1);
	define('T_CATCH', 1);
	define('T_CLASS_C', 1);
	define('T_CLONE', 1);
	define('T_DOC_COMMENT', 1);
	define('T_FINAL', 1);
	define('T_FUNC_C', 1);
	define('T_IMPLEMENTS', 1);
	define('T_INSTANCEOF', 1);
	define('T_INTERFACE', 1);
	define('T_METHOD_C', 1);
	define('T_PRIVATE', 1);
	define('T_PROTECTED', 1);
	define('T_PUBLIC', 1);
	define('T_THROW', 1);
	define('T_TRY', 1);
/*. end_if_php_ver .*/
define('T_AND_EQUAL', 1);
define('T_ARRAY', 1);
define('T_ARRAY_CAST', 1);
define('T_AS', 1);
define('T_BAD_CHARACTER', 1);
define('T_BOOLEAN_AND', 1);
define('T_BOOLEAN_OR', 1);
define('T_BOOL_CAST', 1);
define('T_BREAK', 1);
define('T_CASE', 1);
define('T_CHARACTER', 1);
define('T_CLASS', 1);
define('T_CLOSE_TAG', 1);
define('T_COMMENT', 1);
define('T_CONCAT_EQUAL', 1);
define('T_CONST', 1);
define('T_CONSTANT_ENCAPSED_STRING', 1);
define('T_CONTINUE', 1);
define('T_CURLY_OPEN', 1);
define('T_DEC', 1);
define('T_DECLARE', 1);
define('T_DEFAULT', 1);
define('T_DIV_EQUAL', 1);
define('T_DNUMBER', 1);
define('T_DO', 1);
define('T_DOLLAR_OPEN_CURLY_BRACES', 1);
define('T_DOUBLE_ARROW', 1);
define('T_DOUBLE_CAST', 1);
define('T_DOUBLE_COLON', 1);
define('T_ECHO', 1);
define('T_ELSE', 1);
define('T_ELSEIF', 1);
define('T_EMPTY', 1);
define('T_ENCAPSED_AND_WHITESPACE', 1);
define('T_ENDDECLARE', 1);
define('T_ENDFOR', 1);
define('T_ENDFOREACH', 1);
define('T_ENDIF', 1);
define('T_ENDSWITCH', 1);
define('T_ENDWHILE', 1);
define('T_END_HEREDOC', 1);
define('T_EVAL', 1);
define('T_EXIT', 1);
define('T_EXTENDS', 1);
define('T_FILE', 1);
define('T_FOR', 1);
define('T_FOREACH', 1);
define('T_FUNCTION', 1);
define('T_GLOBAL', 1);
define('T_IF', 1);
define('T_INC', 1);
define('T_INCLUDE', 1);
define('T_INCLUDE_ONCE', 1);
define('T_INLINE_HTML', 1);
define('T_INT_CAST', 1);
define('T_ISSET', 1);
define('T_IS_EQUAL', 1);
define('T_IS_GREATER_OR_EQUAL', 1);
define('T_IS_IDENTICAL', 1);
define('T_IS_NOT_EQUAL', 1);
define('T_IS_NOT_IDENTICAL', 1);
define('T_IS_SMALLER_OR_EQUAL', 1);
define('T_LINE', 1);
define('T_LIST', 1);
define('T_LNUMBER', 1);
define('T_LOGICAL_AND', 1);
define('T_LOGICAL_OR', 1);
define('T_LOGICAL_XOR', 1);
define('T_MINUS_EQUAL', 1);
define('T_MOD_EQUAL', 1);
define('T_MUL_EQUAL', 1);
define('T_NEW', 1);
define('T_NUM_STRING', 1);
define('T_OBJECT_CAST', 1);
define('T_OBJECT_OPERATOR', 1);
define('T_OPEN_TAG', 1);
define('T_OPEN_TAG_WITH_ECHO', 1);
define('T_OR_EQUAL', 1);
define('T_PAAMAYIM_NEKUDOTAYIM', 1);
define('T_PLUS_EQUAL', 1);
define('T_PRINT', 1);
define('T_REQUIRE', 1);
define('T_REQUIRE_ONCE', 1);
define('T_RETURN', 1);
define('T_SL', 1);
define('T_SL_EQUAL', 1);
define('T_SR', 1);
define('T_SR_EQUAL', 1);
define('T_START_HEREDOC', 1);
define('T_STATIC', 1);
define('T_STRING', 1);
define('T_STRING_CAST', 1);
define('T_STRING_VARNAME', 1);
define('T_SWITCH', 1);
define('T_UNSET', 1);
define('T_UNSET_CAST', 1);
define('T_USE', 1);
define('T_VAR', 1);
define('T_VARIABLE', 1);
define('T_WHILE', 1);
define('T_WHITESPACE', 1);
define('T_XOR_EQUAL', 1);

/*. array[int]mixed .*/ function token_get_all(/*. string .*/ $source){}
/*. string.*/ function token_name(/*. int .*/ $type){}
?>
