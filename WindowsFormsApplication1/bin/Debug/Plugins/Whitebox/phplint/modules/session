<?
/*. DOC   Session Handling Functions

See: <a href="http://www.php.net/manual/en/ref.session.php"><code>http://www.php.net/manual/en/ref.session.php</code></a>

.*/


define('SID', '?');

/*. string.*/ function session_name(/*. args .*/){}
/*. string.*/ function session_module_name(/*. args .*/){}
/*. string.*/ function session_save_path(/*. args .*/){}
/*. string.*/ function session_id(/*. args .*/){}
/*. bool .*/ function session_regenerate_id(){}
/*. bool .*/ function session_decode(/*. string .*/ $data){}

/*. bool .*/ function session_register(/*. mixed .*/ $var_names /*., args .*/)
/*. DOC
	<@deprecated If you want your script to work regardless of
	register_globals, you need to instead use the $_SESSION array as
	$_SESSION entries are automatically registered. If your script uses
	session_register(), it will not work in environments where the PHP
	directive register_globals is disabled. Since PHP 4.2.0, the default
	value for the PHP directive register_globals is off, and it is completely
	removed as of PHP 6.0.0. The PHP community encourages all to not rely
	on this directive but instead use other means, such as the superglobals.>
.*/
{}

/*. bool .*/ function session_unregister(/*. string .*/ $varname){}
/*. bool .*/ function session_is_registered(/*. string .*/ $varname){}
/*. string .*/ function session_encode(){}
/*. bool  .*/ function session_start(){}
/*. bool  .*/ function session_destroy(){}
/*. void  .*/ function session_unset(){}
/*. void .*/ function session_set_save_handler(/*. mixed .*/ $open, /*. mixed .*/ $close, /*. mixed .*/ $read, /*. mixed .*/ $write, /*. mixed .*/ $destroy, /*. mixed .*/ $gc){}
/*. string .*/ function session_cache_limiter( /*. args .*/){}
/*. int .*/ function session_cache_expire( /*. args .*/){}
/*. void .*/ function session_set_cookie_params(/*. int .*/ $lifetime /*., args .*/){}
/*. array .*/ function session_get_cookie_params(){}
/*. void  .*/ function session_write_close(){}
/*. void  .*/ function session_commit(){}
?>
